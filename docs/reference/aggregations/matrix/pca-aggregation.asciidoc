[role="xpack"]
[testenv="platinum"]
[[pca-aggregation]]
=== Principal Component Analysis Aggregation

experimental[]

The `pca` aggregation is a numeric aggregation that computes the principal components of a set of numeric fields contained
in each document. The individual documents are treated as distinct observations from the full data corpus. The result of
the computation is defined such that the first principal component has the largest possible variance (e.g., accounts
for as much of the variability in the data as possible), and each succeeding component has the highest variance possible
under the constraint that it is orthogonal to the preceding components.

//////////////////////////

[source,js]
--------------------------------------------------
PUT /pca/_doc/0
{"income": 50000.0, "education": 3.0, "age": 25, "savings": 25000.0}

PUT /pca/_doc/1
{"income": 95687.0, "education": 5.0, "age": 32, "savings": 200000.0}

PUT /pca/_doc/2
{"income": 7890.0, "education": 1.0, "age": 15, "savings": 100.0}

POST /_refresh
--------------------------------------------------
// NOTCONSOLE
// TESTSETUP

//////////////////////////

The following example demonstrates the use of principal component analysis to describe the relationship between income,
education, age, and savings.

[source,js]
--------------------------------------------------
GET /_search
{
    "aggs": {
        "myPCA": {
            "pca": {
                "fields": ["income", "education", "age", "savings"]
            }
        }
    }
}
--------------------------------------------------
// CONSOLE
// TEST[s/_search/_search\?filter_path=aggregations/]

The aggregation type is `pca` and the `fields` setting defines the set of fields (as an array) for computing
the principal component analysis. The above request returns the following response:

[source,js]
--------------------------------------------------
{
    ...
    "aggregations": {
        "myPCA" : {
            "doc_count" : 50,
            "fields" : ["income", "education", "age", "savings"],
            "pc" : [
                {
                    "eigenvalue" : "3.5476",
                    "eigenvector" : [0.314, 0.145, -0.676, 0.494]
                },
                {
                    "eigenvalue" : "2.1320",
                    "eigenvector" : [0.237, 0.444, -0.401, -0.357]
                },
                {
                    "eigenvalue" : "1.0447",
                    "eigenvector" : [0.484, -0.135, -0.004, -0.487]
                },
                {
                    "eigenvalue" : "0.1665",
                    "eigenvector" : [0.404, 0.219, 0.366, 0.568]
                }
            ]
        }
    }
}
--------------------------------------------------
// TESTRESPONSE[s/\.\.\.//]
// TESTRESPONSE[s/: (\-)?[0-9\.E]+/: $body.$_path/]

The `doc_count` field indicates the number of documents involved in the computation of the statistics.

The `eigenvalue` may be a complex number so it is returned as a string.

==== Using Covariance

The principal component analysis computation assumes that data across different fields are in different units. Using this
assumption the default behavior is to compute an eigen decomposition of the pearson product correlation matrix. Users can
alternatively run PCA using an eigen decomposition of the covariance matrix if data quantities are in the same units. This
is done using the optional `use_covariance` parameter as demonstrated below:

[source,js]
--------------------------------------------------
GET /_search
{
    "aggs": {
        "myPCA": {
            "pca": {
                "fields": ["income", "education", "age", "savings"],
                "use_covariance" : true <1>
            }
        }
    }
}
--------------------------------------------------
// CONSOLE
// TEST[s/_search/_search\?filter_path=aggregations/]

<1> Performs principal component analysis as an eigen decomposition over the covariance matrix.

==== Multi Value Fields

The `pca` aggregation treats each document field as an independent sample. The `mode` parameter controls what
array value the aggregation will use for array or multi-valued fields. This parameter can take one of the following:

[horizontal]
`avg`:: (default) Use the average of all values.
`min`:: Pick the lowest value.
`max`:: Pick the highest value.
`sum`:: Use the sum of all values.
`median`:: Use the median of all values.

==== Missing Values

The `missing` parameter defines how documents that are missing a value should be treated.
By default they will be ignored but it is also possible to treat them as if they had a value.
This is done by adding a set of fieldname : value mappings to specify default values per field.

[source,js]
--------------------------------------------------
GET /_search
{
    "aggs": {
        "myPCA": {
            "pca": {
                "fields": ["income", "education", "age", "savings"],
                "missing": {"income" : 50000} <1>
            }
        }
    }
}
--------------------------------------------------
// CONSOLE

<1> Documents without a value in the `income` field will have the default value `50000`.

==== Script

This aggregation does not yet support scripting.

